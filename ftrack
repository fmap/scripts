#!/usr/bin/env node

var Krake      = require('krake');
var Spider     = new Krake({});
var seenTracks = [];

function pageFromName (name) {
  var encName = encodeURIComponent(name);
  return ["http://www.last.fm", "music", encName].join('/');
};

function youtubeURL(id) {
  return ["http://youtube.com/watch?v=", id].join('');
};

function youtubeVideos (name, retrieved) {
  Spider.scrape({
    url: [pageFromName(name), 'videos'].join('/+')
  , cols: 
      [ { desc: 'path'
        , sel: '//li[contains(@class,"source-youtube")]/a'
        , attr: 'href'
        , fn: function(h) { return youtubeURL(h.replace(/.*\+\d-/,'')); }
        }
      , { desc: 'meta'
        , sel: '//li[contains(@class,"source-youtube")]/a'
        , attr: 'title'
        , fn: function(t) { return [name, t].join(' - '); } 
        } 
      ]
  }).addListener('retrieved', retrieved);
};

function freeDownloads (name, retrieved) {
  Spider.scrape({
    url: pageFromName(name)
  , cols:
      [ { desc: 'meta'
        , sel: '//a[contains(@class, "free-download")]'
        , attr: 'title'
        , fn: function(t) { return t.replace(/Download free MP3: /,'').replace(/ \([^\)]+\)$/,'') }
        }
      , { desc: 'path'
        , sel: '//a[contains(@class, "free-download")]'
        , attr: 'href'
        }
      ]
  }).addListener('retrieved', retrieved);
};

function processResult(result) {
  var meta = result['meta'],
      path = result['path'];
  if (seenTracks.indexOf(meta)===-1) {
    seenTracks.push(path);
    console.log(meta, path);
  }
};

process.argv.slice(2, process.argv.length).forEach(function(name) {
  freeDownloads(name, processResult);
  youtubeVideos(name, processResult);
});

// vim:set ft=javascript:
